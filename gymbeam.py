import time
import json
import requests
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from datetime import datetime, timedelta


# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Telegram ===
TELEGRAM_TOKEN = ""
TELEGRAM_CHAT_ID = ""

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç—É GymBeam ===
LOGIN_URL = ""
SHIFTS_URL = ""
EMAIL = ""
PASSWORD = ""

# === –§–∞–π–ª –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω ===
DATA_FILE = "shifts.json"
LAST_CHANGE_FILE = "last_change.json"


# === –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±—Ä–∞—É–∑–µ—Ä–∞ ===
def init_browser():
    options = webdriver.ChromeOptions()
    options.add_argument("--headless")  # –ó–∞–ø—É—Å–∫ –±–µ–∑ GUI
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")

    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=options)
    return driver

# === –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó ===
def login(driver):
    driver.get(LOGIN_URL)
    time.sleep(3)  # –ß–µ–∫–∞—î–º–æ, –ø–æ–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç—å—Å—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞

    # –í–≤–æ–¥–∏–º–æ email
    email_input = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.NAME, "login"))
    )
    email_input.send_keys(EMAIL)

    # –í–≤–æ–¥–∏–º–æ –ø–∞—Ä–æ–ª—å
    password_input = driver.find_element(By.NAME, "password")
    password_input.send_keys(PASSWORD)
    password_input.send_keys(Keys.RETURN)

    time.sleep(5)  # –ß–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó

# === –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–º—ñ–Ω ===
def get_shifts(driver):
    driver.get(SHIFTS_URL)
    time.sleep(3)

    shifts = []
    articles = driver.find_elements(By.TAG_NAME, "article")

    for article in articles:
        title_element = article.find_element(By.TAG_NAME, "h2")
        link_element = article.find_element(By.TAG_NAME, "a")

        title = title_element.text.strip() if title_element else "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"
        link = link_element.get_attribute("href") if link_element else SHIFTS_URL

        shifts.append({"title": title, "link": link})

    return shifts

# === –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –∑–º—ñ–Ω ===
def load_old_shifts():
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as file:
            return json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        return []

# === –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω ===
def save_shifts(shifts):
    with open(DATA_FILE, "w", encoding="utf-8") as file:
        json.dump(shifts, file, ensure_ascii=False, indent=4)

# === –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É Telegram ===
def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {"chat_id": TELEGRAM_CHAT_ID, "text": message}

    response = requests.post(url, json=data)

    if response.status_code == 200:
        print(f"‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ: {message}")
    else:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è: {response.status_code}, {response.text}")
# === 6 –≥–æ–¥–∏–Ω –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–º—ñ–Ω ===
def load_last_change_time():
    try:
        with open(LAST_CHANGE_FILE, "r") as file:
            timestamp = json.load(file).get("last_change")
            return datetime.fromisoformat(timestamp)
    except Exception:
        return None

def save_last_change_time():
    with open(LAST_CHANGE_FILE, "w") as file:
        json.dump({"last_change": datetime.now().isoformat()}, file)


# === –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–º—ñ–Ω ===
def check_for_new_shifts():
    driver = init_browser()
    
    try:
        login(driver)  # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è

        new_shifts = get_shifts(driver)
        old_shifts = load_old_shifts()

        print(f"üÜï –ù–æ–≤—ñ –∑–º—ñ–Ω–∏: {new_shifts}")
        print(f"üìú –°—Ç–∞—Ä—ñ –∑–º—ñ–Ω–∏: {old_shifts}")

        # –ó–Ω–∞–π—Ç–∏ –Ω–æ–≤—ñ –∑–º—ñ–Ω–∏
        added_shifts = [shift for shift in new_shifts if shift not in old_shifts]

        if added_shifts:
            send_telegram_message(f"üîç –ù–æ–≤—ñ –∑–º—ñ–Ω–∏ –∑–Ω–∞–π–¥–µ–Ω–æ: {len(added_shifts)}")
            for shift in added_shifts:
                message = f"üîî –ù–æ–≤–∞ –∑–º—ñ–Ω–∞: {shift['title']}\n–î–µ—Ç–∞–ª—ñ: {shift['link']}"
                send_telegram_message(message)

            # –û–Ω–æ–≤–∏—Ç–∏ —Ñ–∞–π–ª —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –Ω–æ–≤—ñ –∑–º—ñ–Ω–∏
            save_shifts(new_shifts)
            save_last_change_time() 
        else:
            print("‚úÖ –ù–æ–≤–∏—Ö –∑–º—ñ–Ω –Ω–µ–º–∞—î.")
            last_change = load_last_change_time()
            if last_change:
                hours_passed = (datetime.now() - last_change).total_seconds() / 1800
                if hours_passed >= 6:
                    send_telegram_message("‚ÑπÔ∏è –ù–æ–≤–∏—Ö –∑–º—ñ–Ω –Ω–µ –±—É–ª–æ –≤–∂–µ –ø–æ–Ω–∞–¥ 6 –≥–æ–¥–∏–Ω.")
                    # –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å, —â–æ–± –Ω–µ —Å–ø–∞–º–∏—Ç–∏ –∫–æ–∂–Ω—ñ 10 —Ö–≤–∏–ª–∏–Ω
                    save_last_change_time()
            else:
                save_last_change_time()
    
    finally:
        driver.quit()  # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –±—Ä–∞—É–∑–µ—Ä —É –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É

# === –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∫–æ–∂–Ω—ñ 10 —Ö–≤–∏–ª–∏–Ω ===
if __name__ == "__main__":
    while True:
        check_for_new_shifts()
        time.sleep(600)  # –ß–µ–∫–∞—î–º–æ 10 —Ö–≤–∏–ª–∏–Ω –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
